*, *::after, *::before {
   box-sizing: border-box;
}

.modal {
   position: fixed; /* as the user scrolls down the modal will follow them */
   /* to center the modal */
   top: 50%; /* top and left 50% represent the 50% of the screen */
   left: 50%; /* the top left of the modal will be at the center of the screen */
   transform: translate(-50% -50%) scale(0); /* -50% in the x and y direction to center the modal */
   /* 50% of the size of the container as oposed to the size of the screen */
   /* scale(0) hides the modal by default */
   transition: 200ms ease-in-out;

   border: 1px solid black;
   border-radius: 10px;
   z-index: 10; /* so the modal stays above everything */
   background-color: white; /* so he modal will show through the overlay */
   width: 500px;
   max-width: 80%; /* so it won't be larger than 80% of the screen */  
}

.modal.active {
   transform: translate(-50% -50%) scale(1); 
   /* using scale() to smoothly transition the modal in and out from the browser */
}

.modal-header {
   padding: 10px 15px;
   display: flex; /* so items will line side by side - "Example Modal" and the "X" */
   justify-content: space-between; /* space out content */
   align-items: center; 
   border-bottom: 1px solid black;
}

.modal-header .title {
   font-size: 1.25rem;
   font-weight: bold;
}

.modal-header .close-button {
   cursor: pointer; /* the cursor changes so ppl know they can click on it */
   border: none; /* remove the border */
   outline: none; /* remove the outline */
   background: none;
   font-size: 1.25rem;
   font-weight: bold; 
}

.modal-body {
   padding: 10px 15px;
}

#overlay {
   position: fixed; /* so it will follow us around */
   /* opacity: 0; /* so it won't show up */
   /* to make the modal fill the screen: */
   opacity: 0;
   transition: 200ms ease-in-out;
   top: 0;
   bottom: 0;
   right: 0;
   left: 0;
   background-color: rgba(0, 0, 0, .5); /* 50% opaque */
   pointer-events: none; /*  when the overlay is invisible, the overlay won't capture the click events */
      /* we are able to click on the "close" button when the overlay is not active */
}

/* we need to have an id when the overlay is active */
#overlay.active {
   /* inside here we want to capture pointer events */
   pointer-events: all;
   opacity: 1;
}

































